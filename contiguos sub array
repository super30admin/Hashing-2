// Time Complexity : O(n)
// Space Complexity : O(1)
// Did this code successfully run on Leetcode : yes
// Any problem you faced while coding this : no


// Your code here along with comments explaining your approach


class Solution {
    public int findMaxLength(int[] nums) {
        if(nums.length == 0 || nums == null) return 0;
        HashMap<Integer, Integer> hash = new HashMap<>();
        int max = 0;
        hash.put(0,-1);
        int runSum = 0;
        for(int i = 0; i < nums.length; i++){
            if(nums[i] == 0){
                runSum -= 1;
            }
            else{
                runSum += 1;
            }
            if(hash.containsKey(runSum)){
                max = Math.max(max,i - hash.get(runSum));
            }
            else{
                hash.put(runSum, i);
            }
        }
        return max;
    }
}