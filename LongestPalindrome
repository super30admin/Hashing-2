class Solution {
    public int longestPalindrome(String s) {
       HashSet<Character> set = new HashSet<>();
       int length=1;
       for(char c : s.toCharArray()){
          if(set.contains(c)) 
              set.remove(c);
          else
               set.add(c);
       }
       if(set.size()<=1){
           return s.length();
       }
     return (s.length()-set.size())+1;
    }
}
//time complexity : O(n) //one iteration of each element in string
//space complexity: O(n) //worst case every element get stored in set
//ran successfully on leetcode
//Difficuly: Tried hashmap first to store the occurances of element and than did modulo but that approach failed to calculate even
//Approach : Using HashSet
