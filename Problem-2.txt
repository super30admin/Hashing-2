//problem - https://leetcode.com/problems/contiguous-array/
// Time Complexity :O(n)
// Space Complexity :O(n)
// Did this code successfully run on Leetcode :Yes
// Any problem you faced while coding this :


// Your code here along with comments explaining your approach
// Caculated running sum of all elements in array
class Solution {
    public int findMaxLength(int[] nums) {
        
        if(nums == null || nums.length <=1) return 0;
        
        HashMap<Integer,Integer> map = new HashMap<>();
        map.put(0,-1);
        
        int max = 0;
        int count =0;
        
        for(int i =0 ;i<nums.length;i++)
        {
//if num is 0 , minus 1
            if(nums[i]== 0)
            {
                count = count -1;
            }
//if num is 1 , add 1
            else if(nums[i]== 1)
            {
                count = count+1;
            }
            
            if(map.containsKey(count))
            {
              max = Math.max(max, (i-map.get(count)));  
            }
            else{
                map.put(count , i );
            }
        }
        return max;
    }
}