# Time Complexity : O(n)
# Space Complexity : O(n)
# Did this code successfully run on LeetCode : Yes
# Any problem you faced while coding this : Yes

class Solution:
    def findMaxLength(self, nums: List[int]) -> int:
        
        hashMap = {}
        hashMap[0] = -1
        runningSum = 0
        maxLength = 0
        
        for i in range(len(nums)):
            if nums[i] == 0:
                runningSum += -1
            else:
                runningSum += 1
            if runningSum in hashMap:
                maxLength = max(maxLength, i - hashMap[runningSum])
            else:
                hashMap[runningSum] = i
                
        return maxLength