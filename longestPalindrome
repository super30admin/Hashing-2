//tc: O(n)
//sc: O(1)
//single pass solution where once the same character is found, it will be removed and count will be inxcreased by 2. At the end, if set is not empty, we can add any one element and still be palindrome

class Solution {
    public int longestPalindrome(String s) {
        if (s.length() == 0 || s== null) return 0;
        HashSet<Character> set = new HashSet<>();
        int len = 0;
        for (int i=0; i<s.length(); i++) {
            if (set.contains(s.charAt(i))){
                set.remove(s.charAt(i));
                len+=2;
            }
            else {
                set.add(s.charAt(i));
            }
        }
        if (!set.isEmpty()) return len+1;
        return len;
    }
}
