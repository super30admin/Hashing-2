// Time Complexity :O(N)
// Space Complexity :O(1)
// Did this code successfully run on Leetcode :YES
// Any problem you faced while coding this :NO
class Solution {
    public int subarraySum(int[] nums, int k) {
       HashMap<Integer,Integer> map=new HashMap<>();
        map.put(0,1);
        int count=0,sum=0;
        for(int i=0;i<nums.length;i++){
            sum=sum+nums[i];
            if(map.containsKey(sum -k)){
                count= count+ map.get(sum-k);
            }
            if(!map.containsKey(sum))
                map.put(sum,0);
            
            map.put(sum,map.get(sum)+1);
        }
        return count;
    }
}