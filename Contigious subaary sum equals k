//time complexity: O(n^3)
//space complexity: O(1)
//brute force: try all possible contigious subarrays to if any of subarray's sum equals k 
class Solution {
    public int subarraySum(int[] nums, int k) {
        int count = 0;
        if(nums == null || nums.length == 0)
            return 0;
        int n = nums.length;
       for(int i=0; i < n; i++){
           for(int j = i+1; j <=n; j++){
               int sum = 0;
               for(int l = i; l < j; l++){
                   sum += nums[l];
               }
               if(sum == k) count++;
           }
       }
        return count;
    }
}
