// Time Complexity : O(n) where n - size of nums
// Space Complexity : O(n) where n - size of nums
// Did this code successfully run on Leetcode : yes
// Any problem you faced while coding this : no

class Solution {
    public int subarraySum(int[] nums, int k) {
        HashMap<Integer, Integer> map = new HashMap<>();
        map.put(0, 1);
        
        int count = 0;
        int rsum = 0;
        
        for(int val : nums)
        {
            rsum += val;
            if(map.containsKey(rsum - k))
            {
                count += map.get(rsum - k);
            }
            map.put(rsum, map.getOrDefault(rsum, 0) + 1);
        }
        return count;
    }
}
