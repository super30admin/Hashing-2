Time complexity : O(n)
Space complexity : O(n)

class Solution {
    public int subarraySum(int[] nums, int k) {
        HashMap<Integer,Integer> hm=new HashMap<>();
        hm.put(0,1);
        int rsum=0;
        int count=0;
        for(int i=0;i<nums.length;i++){
            rsum+=nums[i];
            if(hm.containsKey(rsum-k)){
                count=count+hm.get(rsum-k);
            }
            if(!hm.containsKey(rsum)){
                hm.put(rsum,0);
            }
            hm.put(rsum,hm.get(rsum)+1);
        }
    return count;    
    }
    
}
