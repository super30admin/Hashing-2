# -*- coding: utf-8 -*-
"""ContigousArrayLength.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FgAWsFn-ZnaABG8DIdhOG8Y2ojk1cXhC
"""

class Solution:
    def findMaxLength(self, nums: List[int]) -> int:
        if (nums == None or len(nums) == 0): return 0
        
        nums_dict = {}
        rSum = 0
        max_len = 0
        nums_dict[0] = -1
        
        for i in range(len(nums)):
            if (nums[i] == 1):
                rSum = rSum + 1
            else:
                rSum = rSum -1
            if rSum in nums_dict.keys():
                max_len = max(max_len, i - nums_dict.get(rSum))
            else:
                nums_dict[rSum] = i
        return max_len