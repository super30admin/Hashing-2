// Time Complexity :O(n) for loop
// Space Complexity : O(n) HashMap
// Did this code successfully run on Leetcode : yes
// Any problem you faced while coding this :
deciding the key and value for hash 

// Your code here along with comments explaining your approach
class Solution {
    public int findMaxLength(int[] nums) {
        int result =0;
        int rsum =0;
       HashMap<Integer, Integer> map = new HashMap<>();
        map.put(rsum,-1);
        
        for(int i=0; i<nums.length; i++)
        {
            
            rsum = nums[i]==0 ? rsum-1 : rsum+1;
            if(map.containsKey(rsum))
            {
                int compareSum = i - map.get(rsum);
                result = Math.max(result, compareSum);
            }
            else
            {
                map.put(rsum, i);
            }
            
        }
        
        return result;
    }
}
